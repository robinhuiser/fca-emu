version: "3"

dotenv: ['.env']

# includes:

output: "prefixed"
silent: true

vars:
  FINITE_PACKAGE_NAME: finite
  EMULATOR_SOURCE_FOLDER: server
  SWAGGER_UI_DIST_DIR: ./swagger-ui

tasks:
  generate:
    desc: Generate OpenAPI & Ent (ORM) boilerplate code
    cmds: 
      - task: generate:open-api
      - task: generate:patch-open-api
      - task: generate:ent

  clean:
    desc: Removes build and container artifacts
    cmds:
      - task: clean:docker

  clean:docker:
    cmds:
      - cmd: docker-compose down
      - cmd: docker-compose rm
      - cmd: docker volume rm fca-emu_postgres-volume
        ignore_error: true
      - cmd: docker volume rm fca-emu_mysql-volume
        ignore_error: true

  generate:open-api:
    cmds:
      - |
        openapi-generator generate \
          --git-repo-id $GIT_REPO_ID \
          --git-user-id $GIT_USER_ID \
          --git-host $GIT_HOST \
          --input-spec $FINITE_SPEC \
          --generator-name go-server \
          --enable-post-process-file \
          --additional-properties packageName="{{.FINITE_PACKAGE_NAME}}",sourceFolder="{{.EMULATOR_SOURCE_FOLDER}}",serverPort=$EMULATOR_LISTEN_PORT \
          --output .

  generate:patch-open-api:
    cmds:
      - |
        for file in $(ls {{.EMULATOR_SOURCE_FOLDER}}/api_*.go | grep -v _service.go); do
          echo $file
          sed -i '' 's/mask := query.Get("mask")/mask, _ := strconv.ParseBool(query.Get("mask"))/g' $file
          sed -i '' 's/enhance := query.Get("enhance")/enhance, _ := strconv.ParseBool(query.Get("enhance"))/g' $file
          sed -i '' 's/inline := query.Get("inline")/inline, _ := strconv.ParseBool(query.Get("inline"))/g' $file
          sed -i '' 's/reversedInRunning := query.Get("reversedInRunning")/reversedInRunning, _ := strconv.ParseBool(query.Get("reversedInRunning"))/g' $file

          sed -i '' 's/status := query.Get("status")/status := TransactionStatus(query.Get("status"))/g' $file
          sed -i '' 's/finiteType := params\["finiteType"\]/finiteType := FiniteType(params\["finiteType"\])/g' $file

          goimports -w $file
        done

  generate:ent:
    cmds:
      - go generate -v ./ent

  swagger-ui:
    desc: Update the Swagger UI with a new version
    cmds:
      - rm -Rf {{.SWAGGER_UI_DIST_DIR}} && mkdir -p {{.SWAGGER_UI_DIST_DIR}}
      - |
        curl -sL https://github.com/swagger-api/swagger-ui/archive/refs/tags/v${SWAGGER_UI_VERSION}.tar.gz | \
          tar -xvz --strip-components=2 \
            -C {{.SWAGGER_UI_DIST_DIR}} \
            swagger-ui-${SWAGGER_UI_VERSION}/dist
      - sed -i '' 's/https:\/\/petstore.swagger.io\/v2\/swagger.json/\/api\/openapi.yaml/g' {{.SWAGGER_UI_DIST_DIR}}/index.html
