/*
 * Cloud API
 *
 * The public facing API through which connectors are exposed as a single abtract API
 *
 * API version: v1.5
 * Contact: support@trexis.net
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// ProductsApiService is a service that implents the logic for the ProductsApiServicer
// This service should implement the business logic for every endpoint for the ProductsApi API. 
// Include any external packages or services that will be required by this service.
type ProductsApiService struct {
}

// NewProductsApiService creates a default api service
func NewProductsApiService() ProductsApiServicer {
	return &ProductsApiService{}
}

// GetProducts - Return a list of products
func (s *ProductsApiService) GetProducts(ctx context.Context, productType string, limit int32, cursor string, enhance bool, xTRACEID string, xTOKEN string) (ImplResponse, error) {
	// TODO - update GetProducts with the required logic for this service method.
	// Add api_products_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ProductsList{}) or use other options such as http.Ok ...
	//return Response(200, ProductsList{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(500, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(500, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetProducts method not implemented")
}

