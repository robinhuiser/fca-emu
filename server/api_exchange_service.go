/*
 * Cloud API
 *
 * The public facing API through which connectors are exposed as a single abtract API
 *
 * API version: v1.5
 * Contact: support@trexis.net
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package finite

import (
	"context"
	"errors"
	"net/http"
)

// ExchangeApiService is a service that implents the logic for the ExchangeApiServicer
// This service should implement the business logic for every endpoint for the ExchangeApi API.
// Include any external packages or services that will be required by this service.
type ExchangeApiService struct {
}

// NewExchangeApiService creates a default api service
func NewExchangeApiService() ExchangeApiServicer {
	return &ExchangeApiService{}
}

// DeleteExchangeTransaction - Perform exchange delete, for money movement
func (s *ExchangeApiService) DeleteExchangeTransaction(ctx context.Context, exchangeId string, xTRACEID string, xTOKEN string) (ImplResponse, error) {

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteExchangeTransaction method not implemented")
}

// GetExchangeTransaction - Return a given exchange transaction
func (s *ExchangeApiService) GetExchangeTransaction(ctx context.Context, exchangeId string, mask bool, enhance bool, xTRACEID string, xTOKEN string) (ImplResponse, error) {

	return Response(http.StatusNotImplemented, nil), errors.New("GetExchangeTransaction method not implemented")
}

// ListAccountExchangeTransactions - List of scheduled and past exchange transaction for a given account
func (s *ExchangeApiService) ListAccountExchangeTransactions(ctx context.Context, accountId string, limit int32, cursor string, mask bool, enhance bool, xTRACEID string, xTOKEN string) (ImplResponse, error) {

	return Response(http.StatusNotImplemented, nil), errors.New("ListAccountExchangeTransactions method not implemented")
}

// ListEntityExchangeTransactions - List of scheduled and past exchange transaction for a given entity
func (s *ExchangeApiService) ListEntityExchangeTransactions(ctx context.Context, entityId string, limit int32, cursor string, mask bool, enhance bool, xTRACEID string, xTOKEN string) (ImplResponse, error) {

	return Response(http.StatusNotImplemented, nil), errors.New("ListEntityExchangeTransactions method not implemented")
}

// PerformExchangeTransaction - Perform exchange, for money movement
func (s *ExchangeApiService) PerformExchangeTransaction(ctx context.Context, xTRACEID string, xTOKEN string, exchangeTransaction ExchangeTransaction) (ImplResponse, error) {

	return Response(http.StatusNotImplemented, nil), errors.New("PerformExchangeTransaction method not implemented")
}

// UpdateExchangeTransaction - Perform exchange update, for money movement
func (s *ExchangeApiService) UpdateExchangeTransaction(ctx context.Context, exchangeId string, xTRACEID string, xTOKEN string, exchangeTransaction ExchangeTransaction) (ImplResponse, error) {

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateExchangeTransaction method not implemented")
}
