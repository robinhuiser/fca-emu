/*
 * Cloud API
 *
 * The public facing API through which connectors are exposed as a single abtract API
 *
 * API version: v1.5
 * Contact: support@trexis.net
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package finite

import (
	"net/http"
	"strconv"
	"strings"
)

// A ProductsApiController binds http requests to an api service and writes the service results to the http response
type ProductsApiController struct {
	service ProductsApiServicer
}

// NewProductsApiController creates a default api controller
func NewProductsApiController(s ProductsApiServicer) Router {
	return &ProductsApiController{service: s}
}

// Routes returns all of the api route for the ProductsApiController
func (c *ProductsApiController) Routes() Routes {
	return Routes{
		{
			"GetProducts",
			strings.ToUpper("Get"),
			"/cloud/v1/products",
			c.GetProducts,
		},
	}
}

// GetProducts - Return a list of products
func (c *ProductsApiController) GetProducts(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	productType := query.Get("productType")
	limit, err := parseInt32Parameter(query.Get("limit"))
	if err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}

	cursor := query.Get("cursor")
	enhance, _ := strconv.ParseBool(query.Get("enhance"))
	xTRACEID := r.Header.Get("X-TRACE-ID")
	xTOKEN := r.Header.Get("X-TOKEN")
	result, err := c.service.GetProducts(r.Context(), productType, limit, cursor, enhance, xTRACEID, xTOKEN)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
