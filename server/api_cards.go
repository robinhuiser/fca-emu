/*
 * Cloud API
 *
 * The public facing API through which connectors are exposed as a single abstract API
 *
 * API version: v1.5.1
 * Contact: support@trexis.net
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package finite

import (
	"net/http"
	"strconv"
	"strings"

	"github.com/gorilla/mux"
)

// A CardsApiController binds http requests to an api service and writes the service results to the http response
type CardsApiController struct {
	service CardsApiServicer
}

// NewCardsApiController creates a default api controller
func NewCardsApiController(s CardsApiServicer) Router {
	return &CardsApiController{service: s}
}

// Routes returns all of the api route for the CardsApiController
func (c *CardsApiController) Routes() Routes {
	return Routes{
		{
			"GetAccountCards",
			strings.ToUpper("Get"),
			"/cloud/v1/account/{accountId}/cards",
			c.GetAccountCards,
		},
	}
}

// GetAccountCards - Return a accounts cards
func (c *CardsApiController) GetAccountCards(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	query := r.URL.Query()
	accountId := params["accountId"]
	mask, _ := strconv.ParseBool(query.Get("mask"))
	enhance, _ := strconv.ParseBool(query.Get("enhance"))
	xTRACEID := r.Header.Get("X-TRACE-ID")
	xTOKEN := r.Header.Get("X-TOKEN")
	result, err := c.service.GetAccountCards(r.Context(), accountId, mask, enhance, xTRACEID, xTOKEN)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
