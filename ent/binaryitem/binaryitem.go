// Code generated by entc, DO NOT EDIT.

package binaryitem

const (
	// Label holds the string label denoting the binaryitem type in the database.
	Label = "binary_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFormat holds the string denoting the format field in the database.
	FieldFormat = "format"
	// FieldLength holds the string denoting the length field in the database.
	FieldLength = "length"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeTransaction holds the string denoting the transaction edge name in mutations.
	EdgeTransaction = "transaction"
	// Table holds the table name of the binaryitem in the database.
	Table = "binary_items"
	// TransactionTable is the table the holds the transaction relation/edge.
	TransactionTable = "binary_items"
	// TransactionInverseTable is the table name for the Transaction entity.
	// It exists in this package in order to avoid circular dependency with the "transaction" package.
	TransactionInverseTable = "transactions"
	// TransactionColumn is the table column denoting the transaction relation/edge.
	TransactionColumn = "transaction_images"
)

// Columns holds all SQL columns for binaryitem fields.
var Columns = []string{
	FieldID,
	FieldFormat,
	FieldLength,
	FieldContent,
	FieldURL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "binary_items"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"transaction_images",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// FormatValidator is a validator for the "format" field. It is called by the builders before save.
	FormatValidator func(string) error
)
