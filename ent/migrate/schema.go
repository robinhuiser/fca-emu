// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "type", Type: field.TypeString},
		{Name: "number", Type: field.TypeString},
		{Name: "parent_id", Type: field.TypeUUID, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "date_created", Type: field.TypeTime},
		{Name: "date_opened", Type: field.TypeTime},
		{Name: "date_last_updated", Type: field.TypeTime},
		{Name: "date_closed", Type: field.TypeTime, Nullable: true},
		{Name: "currency_code", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "source", Type: field.TypeString},
		{Name: "interest_reporting", Type: field.TypeBool},
		{Name: "current_balance", Type: field.TypeFloat32},
		{Name: "available_balance", Type: field.TypeFloat32},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "account_branch", Type: field.TypeInt, Nullable: true},
		{Name: "account_product", Type: field.TypeInt, Nullable: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "accounts_branches_branch",
				Columns:    []*schema.Column{AccountsColumns[17]},
				RefColumns: []*schema.Column{BranchesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "accounts_products_product",
				Columns:    []*schema.Column{AccountsColumns[18]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BanksColumns holds the columns for the "banks" table.
	BanksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bank_code", Type: field.TypeString},
		{Name: "bank_name", Type: field.TypeString},
		{Name: "url", Type: field.TypeString},
		{Name: "swift", Type: field.TypeString},
	}
	// BanksTable holds the schema information for the "banks" table.
	BanksTable = &schema.Table{
		Name:        "banks",
		Columns:     BanksColumns,
		PrimaryKey:  []*schema.Column{BanksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// BranchesColumns holds the columns for the "branches" table.
	BranchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "branch_code", Type: field.TypeString},
		{Name: "street_number", Type: field.TypeString},
		{Name: "street_name", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "state", Type: field.TypeString, Size: 2},
		{Name: "zip", Type: field.TypeString},
		{Name: "latitude", Type: field.TypeFloat64},
		{Name: "longitude", Type: field.TypeFloat64},
		{Name: "bank_branches", Type: field.TypeInt, Nullable: true},
	}
	// BranchesTable holds the schema information for the "branches" table.
	BranchesTable = &schema.Table{
		Name:       "branches",
		Columns:    BranchesColumns,
		PrimaryKey: []*schema.Column{BranchesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "branches_banks_branches",
				Columns:    []*schema.Column{BranchesColumns[9]},
				RefColumns: []*schema.Column{BanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CardsColumns holds the columns for the "cards" table.
	CardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"CREDIT", "DEBIT"}},
		{Name: "number", Type: field.TypeString},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "expiry_date", Type: field.TypeTime},
		{Name: "holder_name", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"LOCKED", "BLOCKED", "OK"}},
		{Name: "url", Type: field.TypeString},
		{Name: "card_network", Type: field.TypeInt, Nullable: true},
	}
	// CardsTable holds the schema information for the "cards" table.
	CardsTable = &schema.Table{
		Name:       "cards",
		Columns:    CardsColumns,
		PrimaryKey: []*schema.Column{CardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cards_card_networks_network",
				Columns:    []*schema.Column{CardsColumns[8]},
				RefColumns: []*schema.Column{CardNetworksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CardNetworksColumns holds the columns for the "card_networks" table.
	CardNetworksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString},
	}
	// CardNetworksTable holds the schema information for the "card_networks" table.
	CardNetworksTable = &schema.Table{
		Name:        "card_networks",
		Columns:     CardNetworksColumns,
		PrimaryKey:  []*schema.Column{CardNetworksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EntitiesColumns holds the columns for the "entities" table.
	EntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "date_created", Type: field.TypeTime},
		{Name: "firstname", Type: field.TypeString, Nullable: true},
		{Name: "lastname", Type: field.TypeString, Nullable: true},
		{Name: "fullname", Type: field.TypeString, Nullable: true},
		{Name: "date_of_birth", Type: field.TypeTime},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"PERSON", "ORGANIZATION", "CORPORATE"}},
		{Name: "last_login_date", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString},
		{Name: "token", Type: field.TypeString},
		{Name: "url", Type: field.TypeString},
	}
	// EntitiesTable holds the schema information for the "entities" table.
	EntitiesTable = &schema.Table{
		Name:        "entities",
		Columns:     EntitiesColumns,
		PrimaryKey:  []*schema.Column{EntitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EntityAddressesColumns holds the columns for the "entity_addresses" table.
	EntityAddressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "country", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "postal_code", Type: field.TypeString},
		{Name: "state", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"BUSINESS", "PRIVATE", "MAILBOX"}},
		{Name: "line1", Type: field.TypeString},
		{Name: "line2", Type: field.TypeString, Nullable: true},
		{Name: "line3", Type: field.TypeString, Nullable: true},
		{Name: "primary", Type: field.TypeBool},
		{Name: "entity_entity_addresses", Type: field.TypeUUID, Nullable: true},
	}
	// EntityAddressesTable holds the schema information for the "entity_addresses" table.
	EntityAddressesTable = &schema.Table{
		Name:       "entity_addresses",
		Columns:    EntityAddressesColumns,
		PrimaryKey: []*schema.Column{EntityAddressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "entity_addresses_entities_entityAddresses",
				Columns:    []*schema.Column{EntityAddressesColumns[10]},
				RefColumns: []*schema.Column{EntitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntityContactPointsColumns holds the columns for the "entity_contact_points" table.
	EntityContactPointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "prefix", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"SMS", "EMAIL", "PHONE", "WHATSAPP", "SKYPE"}},
		{Name: "suffix", Type: field.TypeInt, Nullable: true},
		{Name: "value", Type: field.TypeString},
		{Name: "entity_entity_contact_points", Type: field.TypeUUID, Nullable: true},
	}
	// EntityContactPointsTable holds the schema information for the "entity_contact_points" table.
	EntityContactPointsTable = &schema.Table{
		Name:       "entity_contact_points",
		Columns:    EntityContactPointsColumns,
		PrimaryKey: []*schema.Column{EntityContactPointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "entity_contact_points_entities_entityContactPoints",
				Columns:    []*schema.Column{EntityContactPointsColumns[6]},
				RefColumns: []*schema.Column{EntitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntityTaxInformationsColumns holds the columns for the "entity_tax_informations" table.
	EntityTaxInformationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"SSN"}},
		{Name: "tax_id", Type: field.TypeString},
		{Name: "entity_entity_tax_information", Type: field.TypeUUID, Nullable: true},
	}
	// EntityTaxInformationsTable holds the schema information for the "entity_tax_informations" table.
	EntityTaxInformationsTable = &schema.Table{
		Name:       "entity_tax_informations",
		Columns:    EntityTaxInformationsColumns,
		PrimaryKey: []*schema.Column{EntityTaxInformationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "entity_tax_informations_entities_entityTaxInformation",
				Columns:    []*schema.Column{EntityTaxInformationsColumns[3]},
				RefColumns: []*schema.Column{EntitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PreferencesColumns holds the columns for the "preferences" table.
	PreferencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "account_preference", Type: field.TypeUUID, Nullable: true},
		{Name: "entity_entity_preferences", Type: field.TypeUUID, Nullable: true},
	}
	// PreferencesTable holds the schema information for the "preferences" table.
	PreferencesTable = &schema.Table{
		Name:       "preferences",
		Columns:    PreferencesColumns,
		PrimaryKey: []*schema.Column{PreferencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "preferences_accounts_preference",
				Columns:    []*schema.Column{PreferencesColumns[3]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "preferences_entities_entityPreferences",
				Columns:    []*schema.Column{PreferencesColumns[4]},
				RefColumns: []*schema.Column{EntitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"INVESTMENT", "LOAN", "DEPOSIT", "CARD"}},
		{Name: "type_name", Type: field.TypeString},
		{Name: "sub_type", Type: field.TypeString},
		{Name: "sub_type_name", Type: field.TypeString},
		{Name: "url", Type: field.TypeString},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:        "products",
		Columns:     ProductsColumns,
		PrimaryKey:  []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoutingNumbersColumns holds the columns for the "routing_numbers" table.
	RoutingNumbersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "number", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"WIRE", "ABA"}},
		{Name: "account_routingnumber", Type: field.TypeUUID, Nullable: true},
	}
	// RoutingNumbersTable holds the schema information for the "routing_numbers" table.
	RoutingNumbersTable = &schema.Table{
		Name:       "routing_numbers",
		Columns:    RoutingNumbersColumns,
		PrimaryKey: []*schema.Column{RoutingNumbersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "routing_numbers_accounts_routingnumber",
				Columns:    []*schema.Column{RoutingNumbersColumns[3]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AccountOwnerColumns holds the columns for the "account_owner" table.
	AccountOwnerColumns = []*schema.Column{
		{Name: "account_id", Type: field.TypeUUID},
		{Name: "entity_id", Type: field.TypeUUID},
	}
	// AccountOwnerTable holds the schema information for the "account_owner" table.
	AccountOwnerTable = &schema.Table{
		Name:       "account_owner",
		Columns:    AccountOwnerColumns,
		PrimaryKey: []*schema.Column{AccountOwnerColumns[0], AccountOwnerColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "account_owner_account_id",
				Columns:    []*schema.Column{AccountOwnerColumns[0]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "account_owner_entity_id",
				Columns:    []*schema.Column{AccountOwnerColumns[1]},
				RefColumns: []*schema.Column{EntitiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		BanksTable,
		BranchesTable,
		CardsTable,
		CardNetworksTable,
		EntitiesTable,
		EntityAddressesTable,
		EntityContactPointsTable,
		EntityTaxInformationsTable,
		PreferencesTable,
		ProductsTable,
		RoutingNumbersTable,
		AccountOwnerTable,
	}
)

func init() {
	AccountsTable.ForeignKeys[0].RefTable = BranchesTable
	AccountsTable.ForeignKeys[1].RefTable = ProductsTable
	BranchesTable.ForeignKeys[0].RefTable = BanksTable
	CardsTable.ForeignKeys[0].RefTable = CardNetworksTable
	EntityAddressesTable.ForeignKeys[0].RefTable = EntitiesTable
	EntityContactPointsTable.ForeignKeys[0].RefTable = EntitiesTable
	EntityTaxInformationsTable.ForeignKeys[0].RefTable = EntitiesTable
	PreferencesTable.ForeignKeys[0].RefTable = AccountsTable
	PreferencesTable.ForeignKeys[1].RefTable = EntitiesTable
	RoutingNumbersTable.ForeignKeys[0].RefTable = AccountsTable
	AccountOwnerTable.ForeignKeys[0].RefTable = AccountsTable
	AccountOwnerTable.ForeignKeys[1].RefTable = EntitiesTable
}
