// Code generated by entc, DO NOT EDIT.

package entitycontactpoint

import (
	"fmt"
)

const (
	// Label holds the string label denoting the entitycontactpoint type in the database.
	Label = "entity_contact_point"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPrefix holds the string denoting the prefix field in the database.
	FieldPrefix = "prefix"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldSuffix holds the string denoting the suffix field in the database.
	FieldSuffix = "suffix"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// Table holds the table name of the entitycontactpoint in the database.
	Table = "entity_contact_points"
)

// Columns holds all SQL columns for entitycontactpoint fields.
var Columns = []string{
	FieldID,
	FieldPrefix,
	FieldName,
	FieldType,
	FieldSuffix,
	FieldValue,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "entity_contact_points"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"entity_contact_points",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Type defines the type for the "type" enum field.
type Type string

// Type values.
const (
	TypeSMS      Type = "SMS"
	TypeEMAIL    Type = "EMAIL"
	TypePHONE    Type = "PHONE"
	TypeWHATSAPP Type = "WHATSAPP"
	TypeSKYPE    Type = "SKYPE"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeSMS, TypeEMAIL, TypePHONE, TypeWHATSAPP, TypeSKYPE:
		return nil
	default:
		return fmt.Errorf("entitycontactpoint: invalid enum value for type field: %q", _type)
	}
}
